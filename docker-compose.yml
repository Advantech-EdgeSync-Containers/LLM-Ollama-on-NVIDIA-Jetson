# ==========================================================================
# LLM-Ollama-on-NVIDIA-Jetson Docker Compose File
# ==========================================================================
# Version:      1.2.0-Ubuntu20.04-ARM
# Author:       Samir Singh <samir.singh@advantech.com>
# Created:      March 25, 2025
# Last Updated: August 28, 2025
#
# Description:
#
#   This Docker Compose file deploys the Advantech Jetson™ LLM-Ollama Edge AI
#   development environment with NVIDIA GPU acceleration enabled for Jetson
#   platforms.
#
#   The stack includes:
#     - LLM Ollama Service: Provides Ollama-based large language model
#       inference with CUDA, Tensor, and Jetson multimedia API acceleration for
#       efficient AI model execution at the edge. Includes Advantech’s
#       benchmarking utility (`wise-bench.sh`) for profiling performance.
#     - OpenWebUI Service: Delivers a browser-based interface to interact with
#       the Ollama backend, visualize outputs, and test prompt workflows in
#       real time.
#
#   The configuration ensures optimized hardware access to NVIDIA GPU, CUDA,
#   Tensor cores, and multimedia accelerators on Jetson devices, enabling high
#   performance AI development and inference workloads.
#
# Terms and Conditions:
#   1. This software is provided by Advantech Corporation "as is" and any
#      express or implied warranties, including, but not limited to, the implied
#      warranties of merchantability and fitness for a particular purpose are
#      disclaimed.
#   2. In no event shall Advantech Corporation be liable for any direct, indirect,
#      incidental, special, exemplary, or consequential damages arising in any way
#      out of the use of this software.
#   3. Redistribution and use in source and binary forms, with or without
#      modification, are permitted provided that the above copyright notice and
#      this permission notice appear in all copies.
#
# Copyright (c) 2025 Advantech Corporation. All rights reserved.
# ==========================================================================
services:
  llm-ollama-service:
      image: harbor.edgesync.cloud/nagarro-container-images/llm-ollama-on-nvidia-jetson:v1
      container_name: LLM-Ollama-on-NVIDIA-Jetson
      env_file: .env
      privileged: true
      network_mode: host
      runtime: nvidia
      tty: true
      stdin_open: true
      entrypoint: ["/bin/bash"]
      restart: always
      labels:
        maintainer: "Samir Singh <samir.singh@advantech.com>"
        vendor: "Advantech"
        version: "1.2"
        description: "Jetson™ LLM Ollama AI Development Container"
      environment:
        - NVIDIA_VISIBLE_DEVICES=all
        - NVIDIA_DRIVER_CAPABILITIES=all,compute,video,utility,graphics
      volumes:
        - ./start_services.sh:/workspace/start_services.sh
        - ./wise-bench.sh:/workspace/wise-bench.sh
        - ollama-models:/root/.ollama
        - /etc/nv_tegra_release:/etc/nv_tegra_release
        - /usr/lib/aarch64-linux-gnu/tegra:/usr/lib/aarch64-linux-gnu/tegra
        - /usr/src/jetson_multimedia_api:/usr/src/jetson_multimedia_api
        - /usr/lib/aarch64-linux-gnu/gstreamer-1.0:/usr/lib/aarch64-linux-gnu/gstreamer-1.0
        - /usr/local/cuda:/usr/local/cuda
      devices:
        - /dev/nvhost-ctrl
        - /dev/nvhost-ctrl-gpu
        - /dev/nvhost-prof-gpu
        - /dev/nvmap
        - /dev/nvhost-gpu
        - /dev/nvhost-as-gpu
        - /dev/nvhost-vic
        - /dev/nvhost-msenc
        - /dev/nvhost-nvdec
        - /dev/nvhost-nvjpg
        - /dev/nvgpu/igpu0

  openweb-ui-service:
    image: ghcr.io/open-webui/open-webui:0.6.5
    container_name: openweb-ui-service
    env_file: .env
    network_mode: host
    environment:
      OPENAI_API_BASE_URL: ${OPENAI_API_OLLAMA_BASE}/v1
      PORT: ${OPENWEBUI_PORT}
      ENABLE_TAGS_GENERATION: ${ENABLE_TAGS_GENERATION}
      ENABLE_TITLE_GENERATION: ${ENABLE_TITLE_GENERATION}
    volumes:
      - open-webui:/app/backend/data
    restart: always

volumes:
  open-webui:
    driver: local
  ollama-models:
    driver: local
